import { fetch } from 'wix-fetch';
import { fetchSecretsFromSecretsManager } from './getSecrets';

const textResponseHandler = (text) => {
	console.log('Error here = ', text);
	const { statusCode, message } = JSON.parse(text);
	if (message === 'jwt expired')
		return { message: `${statusCode}:${message}`, error: true, redirect: true };
	return { message: `${statusCode}:${message}`, error: true };
};

export async function generateMagicLink(bearerToken) {
	try {
		const secrets = await fetchSecretsFromSecretsManager();

		if (!secrets.BACKEND_API_KEY || !secrets.SUPABASE_URL)
			return JSON.stringify({
				message: 'Backend Server not able to connect with Database',
			});
		const url = `https://${secrets.SUPABASE_URL}/admin/generate-magic-link`;
		return fetch(url, {
			method: 'GET',
			headers: {
				'Content-Type': 'application/json',
				'x-wix-api-key': secrets.BACKEND_API_KEY,
				Authorization: 'bearer ' + bearerToken,
			},
		})
			.then((res) => {
				if (res.status === 201)
					return res
						.json()
						.then(({ magicLink }) => {
							return {
								error: false,
								magicLink,
								message: 'User has been successfully added.',
								status: 201,
							};
						})
						.catch((error) => {
							console.error(error.message);
							return { message: error.message, error: true };
						});
				else
					return res
						.text()
						.then(textResponseHandler)
						.catch((error) => {
							console.error('Unable to decode body into text - ', error);
							return { message: error.message, error: true };
						});
			})
			.catch((error) => {
				console.error("Internal Error occured - '" + url + "'");
				return { message: error.message, error: true };
			});
	} catch (e) {
		return { message: e.message, error: true };
	}
}

export async function getAllPendingCode(bearerToken) {
	try {
		const secrets = await fetchSecretsFromSecretsManager();

		if (!secrets.BACKEND_API_KEY || !secrets.SUPABASE_URL)
			return JSON.stringify({
				message: 'Backend Server not able to connect with Database',
			});
		const url = `https://${secrets.SUPABASE_URL}/admin/get-pending-magic-links`;
		return fetch(url, {
			method: 'GET',
			headers: {
				'Content-Type': 'application/json',
				'x-wix-api-key': secrets.BACKEND_API_KEY,
				Authorization: 'bearer ' + bearerToken,
			},
		})
			.then((res) => {
				if (res.status === 200)
					return res
						.json()
						.then((data) => {
							return {
								error: false,
								data,
								message: 'User has been successfully added.',
								status: 201,
							};
						})
						.catch((error) => {
							console.error(error.message);
							return { message: error.message, error: true };
						});
				else
					return res
						.text()
						.then(textResponseHandler)
						.catch((error) => {
							console.error('Unable to decode body into text - ', error);
							return { message: error.message, error: true };
						});
			})
			.catch((error) => {
				console.error("Internal Error occured - '" + url + "'");
				return { message: error.message, error: true };
			});
	} catch (e) {
		return { message: e.message, error: true };
	}
}

export async function revokeAMagicCode(bearerToken, employeeCode) {
	try {
		const secrets = await fetchSecretsFromSecretsManager();

		if (!secrets.BACKEND_API_KEY || !secrets.SUPABASE_URL)
			return JSON.stringify({
				message: 'Backend Server not able to connect with Database',
			});
		const url = `https://${secrets.SUPABASE_URL}/admin/revoke-pending-magic-link?employeeCode=${employeeCode}`;
		return fetch(url, {
			method: 'GET',
			headers: {
				'Content-Type': 'application/json',
				'x-wix-api-key': secrets.BACKEND_API_KEY,
				Authorization: 'bearer ' + bearerToken,
			},
		})
			.then((res) => {
				if (res.status === 204)
					return {
						error: false,
						message: 'Revoked token successfully',
					};
				else
					return res
						.text()
						.then(textResponseHandler)
						.catch((error) => {
							console.error('Unable to decode body into text - ', error);
							return { message: error.message, error: true };
						});
			})
			.catch((error) => {
				console.error("Internal Error occured - '" + url + "'");
				return { message: error.message, error: true };
			});
	} catch (e) {
		return { message: e.message, error: true };
	}
}

export async function getAllAccesses(bearerToken) {
	try {
		const secrets = await fetchSecretsFromSecretsManager();

		if (!secrets.BACKEND_API_KEY || !secrets.SUPABASE_URL)
			return JSON.stringify({
				message: 'Backend Server not able to connect with Database',
			});
		const url = `https://${secrets.SUPABASE_URL}/admin/get-all-accesses`;
		return fetch(url, {
			method: 'GET',
			headers: {
				'Content-Type': 'application/json',
				'x-wix-api-key': secrets.BACKEND_API_KEY,
				Authorization: 'bearer ' + bearerToken,
			},
		})
			.then((res) => {
				if (res.status === 200)
					return res
						.json()
						.then((data) => {
							return {
								error: false,
								message: 'Data fetched successfully',
								data,
							};
						})
						.catch((err) => ({ message: err.message, error: true }));
				else {
					console.log('Status = ', res.status);
					return res
						.text()
						.then(textResponseHandler)
						.catch((error) => {
							console.error('Unable to decode body into text - ', error);
							return { message: error.message, error: true };
						});
				}
			})
			.catch((error) => {
				console.error("Internal Error occured - '" + url + "'");
				return { message: error.message, error: true };
			});
	} catch (e) {
		return { message: e.message, error: true };
	}
}

export async function addAccess(bearerToken, payload) {
	try {
		const secrets = await fetchSecretsFromSecretsManager();

		if (!secrets.BACKEND_API_KEY || !secrets.SUPABASE_URL)
			return JSON.stringify({
				message: 'Backend Server not able to connect with Database',
			});
		const url = `https://${secrets.SUPABASE_URL}/admin/add-access-to-org`;
		return fetch(url, {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json',
				'x-wix-api-key': secrets.BACKEND_API_KEY,
				Authorization: 'bearer ' + bearerToken,
			},
			body: JSON.stringify({ payload }),
		})
			.then((res) => {
				if (res.status === 201)
					return {
						error: false,
						message: 'Data added successfully',
					};
				else
					return res
						.text()
						.then(textResponseHandler)
						.catch((error) => {
							console.error('Unable to decode body into text - ', error);
							return { message: error.message, error: true };
						});
			})
			.catch((error) => {
				console.error("Internal Error occured - '" + url + "'");
				return { message: error.message, error: true };
			});
	} catch (e) {
		return { message: e.message, error: true };
	}
}

